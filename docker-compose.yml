version: '3.8'

services:
  db:
    container_name: df-db
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    networks:
      - app-network

  amqp:
    container_name: df-rabbitmq
    image: rabbitmq:3.13.6-management
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  worker:
    # container_name: df-worker
    build:
      context: ./worker-importer
      dockerfile: Dockerfile
    volumes:
      - ./.env:/app/.env
    depends_on:
      - db
      - amqp
    networks:
      - app-network
    deploy:
      replicas: 1

  php:
    build: ./app
    container_name: df-app
    tty: true
    volumes:
      - ./app/docker/php.ini:/usr/local/etc/php/conf.d/local.ini
      - ./.env:/var/www/.env
    ports:
      - "9000:9000"
    depends_on:
      - db
      - amqp
    networks:
      - app-network

  nginx:
    build: ./docker/nginx/build
    container_name: df-nginx
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./app:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network
    depends_on:
      - php

  # elk:
  #   image: sebp/elk
  #   container_name: df-elk
  #   ports:
  #     - 5601:5601
  #     - 9200:9200
  #     - 5044:5044
  #   networks:
  #     - app-network
  
  # apm-server:
  #   image: docker.elastic.co/apm/apm-server:8.15.0
  #   container_name: df-apm
  #   volumes:
  #     - ./docker/apm/apm-server.yml:/usr/share/apm-server/apm-server.yml
  #   ports:
  #     - 8200:8200
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge
